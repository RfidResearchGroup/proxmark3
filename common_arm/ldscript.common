/*-----------------------------------------------------------------------------
 * Copyright (C) Proxmark3 contributors. See AUTHORS.md for details.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * See LICENSE.txt for the text of the license.
 *-----------------------------------------------------------------------------
 *-----------------------------------------------------------------------------
 * Common linker script
 *-----------------------------------------------------------------------------
 */
stacksize = DEFINED(stacksize) ? stacksize : 8488;
commonareasize = 0x20;

/* AT91SAM7S256 has 256k Flash and 64k RAM */
/* AT91SAM7S512 has 512k Flash and 64k RAM */
/* boot space = 8192bytes (0x2000) */
/* osimage space =   (512k - 0x2000 == 524288 - 8192 == 516096bytes == 0x7E000 ) */
MEMORY
{
    bootphase1 : ORIGIN = 0x00100000, LENGTH = 0x200                                        /* Phase 1 bootloader: Copies real bootloader to RAM */
    bootphase2 : ORIGIN = 0x00100200, LENGTH = 0x2000 - 0x200                               /* Main bootloader code, stored in Flash, executed from RAM */
    osimage    : ORIGIN = 0x00102000, LENGTH = 512K - 0x2000                                /* Place where the main OS will end up */
    ram        : ORIGIN = 0x00200000, LENGTH = 64K - commonareasize                         /* RAM, minus small common area */
    stack      : ORIGIN = 0x00200000 + 64K - stacksize - commonareasize, LENGTH = stacksize /* Stack */
    commonarea : ORIGIN = 0x00200000 + 64K - commonareasize, LENGTH = commonareasize        /* Communication between bootloader and main OS */
}

/* Export some information that can be used from within the firmware */
_bootphase1_version_pointer = ORIGIN(bootphase1) + LENGTH(bootphase1) - 0x4;
_osimage_entry = ORIGIN(osimage);
_bootrom_start = ORIGIN(bootphase1);
_bootrom_end = ORIGIN(bootphase2) + LENGTH(bootphase2);
_flash_start = ORIGIN(bootphase1);
_flash_end = ORIGIN(osimage) + LENGTH(osimage);
_stack_start = ORIGIN(stack);
_stack_end = ORIGIN(ram) + LENGTH(ram) - 8;
